{"version":3,"sources":["api.ts","types/Select.ts","TodoContext.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Select","TodoContext","React","createContext","todosList","loader","filterSelect","All","setFilterSelect","_select","search","setSearch","_search","todo","setTodo","_todo","GlobalPostsProvider","children","useState","todos","setTodos","setLoader","useEffect","finally","value","Provider","TodoList","useContext","filteredTodoList","select","updatedTodos","filter","title","includes","Active","completed","Completed","getFilteredTodoList","className","map","id","userId","type","onClick","TodoFilter","onChange","event","currentTarget","placeholder","style","pointerEvents","Loader","TodoModal","user","setUser","modalLoader","setModalLoader","href","email","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03b7f740.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Select {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Select } from './types/Select';\n\nconst todosList: Todo[] = [];\n\nexport const TodoContext = React.createContext({\n  todosList,\n  loader: false,\n  filterSelect: Select.All,\n  setFilterSelect: (_select: Select) => {},\n  search: '',\n  setSearch: (_search: string) => {},\n  todo: null as Todo | null,\n  setTodo: (_todo: Todo | null) => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const GlobalPostsProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loader, setLoader] = useState(false);\n  const [filterSelect, setFilterSelect] = useState(Select.All);\n  const [search, setSearch] = useState('');\n  const [todo, setTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoader(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoader(false));\n  }, []);\n\n  const value = {\n    todosList: todos,\n    loader,\n    filterSelect,\n    setFilterSelect,\n    search,\n    setSearch,\n    todo,\n    setTodo,\n  };\n\n  return (\n    <TodoContext.Provider value={value}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodoContext } from '../../TodoContext';\nimport { Todo } from '../../types/Todo';\nimport { Select } from '../../types/Select';\n\nfunction getFilteredTodoList(todos: Todo[], select: string, search: string) {\n  const newTodos = [...todos];\n\n  const updatedTodos = newTodos.filter(todo => todo.title.includes(search));\n\n  switch (select) {\n    case Select.Active: {\n      return updatedTodos.filter(todo => todo.completed === false);\n    }\n\n    case Select.Completed: {\n      return updatedTodos.filter(todo => todo.completed === true);\n    }\n\n    default:\n      return updatedTodos;\n  }\n}\n\nexport const TodoList: React.FC = () => {\n  const {\n    todo,\n    todosList,\n    filterSelect,\n    search,\n    setTodo,\n  } = useContext(TodoContext);\n  const filteredTodoList = getFilteredTodoList(todosList, filterSelect, search);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodoList.map(({\n          id,\n          title,\n          completed,\n          userId,\n        }) => (\n          <tr data-cy=\"todo\" className=\"\" key={id}>\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={completed ? 'has-text-success' : 'has-text-danger'}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setTodo({\n                  id,\n                  title,\n                  completed,\n                  userId,\n                })}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={todo?.id === id\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useContext } from 'react';\nimport { TodoContext } from '../../TodoContext';\nimport { Select } from '../../types/Select';\n\nexport const TodoFilter = () => {\n  const {\n    filterSelect,\n    setFilterSelect,\n    search,\n    setSearch,\n  } = useContext(TodoContext);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterSelect}\n            onChange={event => {\n              setFilterSelect(event.currentTarget.value as Select);\n            }}\n          >\n            <option value={Select.All}>All</option>\n            <option value={Select.Active}>Active</option>\n            <option value={Select.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={search}\n          onChange={event => setSearch(event.currentTarget.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {search && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearch('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { TodoContext } from '../../TodoContext';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [modalLoader, setModalLoader] = useState(false);\n  const { todo, setTodo } = useContext(TodoContext);\n\n  useEffect(() => {\n    setModalLoader(true);\n    if (todo) {\n      getUser(todo.userId)\n        .then(setUser)\n        .finally(() => setModalLoader(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {modalLoader ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">Planned</strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { TodoContext } from './TodoContext';\n\nexport const App: React.FC = () => {\n  const { loader, todo } = useContext(TodoContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n            <div className=\"block\">\n              {loader && (\n                <Loader />\n              )}\n              {!loader && (\n                <TodoList />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { GlobalPostsProvider } from './TodoContext';\n\nReactDOM.render(\n  <GlobalPostsProvider>\n    <App />\n  </GlobalPostsProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}